# SPDX-FileCopyrightText: 2022 - 2023 Robin Vobruba <hoijui.quaero@gmail.com>
# SPDX-FileCopyrightText: 2020 Armin Becher <becherarmin@gmail.com>
#
# SPDX-License-Identifier: Unlicense

[package]
name = "mle"
version = "0.24.0"
license = "AGPL-3.0-or-later"
authors = ["Robin Vobruba <hoijui.quaero@gmail.com>"]
description = """
    The markup link extractor (mle) extracts links
    from markup files (Markdown and HTML).
    """
repository = "https://github.com/hoijui/mle"
homepage = "https://github.com/hoijui/mle"
documentation = "https://docs.rs/mle"
keywords = ["link-extractor", "links", "markup", "html", "markdown"]
categories = ["command-line-utilities", "text-processing", "filesystem"]
readme = "README.md"
edition = "2021"

[lints.rust]
rust_2021_compatibility = { level = "warn", priority = -1 }

[lints.clippy]
all = { level = "deny", priority = -1 }
pedantic = { level = "deny", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }
#wildcard_enum_match_arm = "warn"
#string_slice = "warn"
#indexing_slicing = "warn"
#clone_on_ref_ptr = "warn"
#try_err = "warn"
shadow_reuse = "warn"
#single_char_lifetime_names = "warn"
#empty_structs_with_brackets = "warn"
#else_if_without_else = "warn"
use_debug = "warn"
print_stdout = "warn"
print_stderr = "warn"
# NOTE allowed because:
#      If the same regex is going to be applied to multiple inputs,
#      the precomputations done by Regex construction
#      can give significantly better performance
#      than any of the `str`-based methods.
trivial_regex = { level = "allow", priority = 1 }
default_trait_access = { level = "allow", priority = 1 }
struct_excessive_bools = { level = "allow", priority = 1 }
#fn_params_excessive_bools = { level = "allow", priority = 1 }
too_many_lines = { level = "allow", priority = 1 }

[dependencies]
clap = { version = "4.1", features = ["cargo", "wrap_help"] }
colored = { version = "2.1", default-features = false }
const_format = { version = "0.2", default-features = false }
csv = { version = "1.1", default-features = false }
# email_address = "0.2"
env_logger = { version = "0.10", default-features = false }
git-version = { version = "0.3", default-features = false }
lazy_static = { version = "1.4.0", default-features = false }
log = { version = "0.4", default-features = false }
#pulldown-cmark = {git = "https://github.com/lo48576/pulldown-cmark", branch="feature/heading-attrs"}
pulldown-cmark = { version = "0.9", default-features = false }
regex = { version = "1.10", default-features = false }
relative-path = { version = "1.7", default-features = false, features = ["serde"] }
reqwest = { version = "0.11", default-features = false, features = ["native-tls-vendored"] }
serde = { version = "1.0", default-features = false, features = ["derive", "rc"] }
serde_json = { version = "1.0", default-features = false }
serde_regex = { version = "1.1", default-features = false }
simplelog = { version = "0.12", default-features = false }
thiserror = { version = "1.0", default-features = false }
url = { version = "2.2", default-features = false, features = ["serde"] }
walkdir = { version = "2.3", default-features = false }
wildmatch = { version = "2.2", default-features = false, features = [ "serde" ] }

[dev-dependencies]
criterion = { version = "0.5", default-features = false }
ntest = { version = "0.9", default-features = false }

[[bench]]
name = "benchmarks"
harness = false
